---
title: "Exercise-11"
format: html
editor: visual
---

## Practice Model Selection

### Step 1. Loading in data set and replacing all values (-999) with NA

```{r}

library(tidyverse)
library(broom)
library(MuMIn)
library(skimr)

f <- "https://raw.githubusercontent.com/difiore/ada-datasets/main/Mammal_lifehistories_v2.txt"
d <- read_tsv(f, col_names = TRUE)

head(d)

skim(d)
```

##### after some exploratory analysis using the skimr () package we see that family ,species, and genus are categorical and the rest are numeric variables .

#### replacing the -999 values with NA

```{r}

library(naniar) #trying the naninar package with the replace_wiiht_na_all function

d <- d %>% replace_with_na_all(condition = ~.x == -999)

head(d) # we see that it worked ! 
```

### Step 2. Drop the Variables litter size and refs

```{r}
library(dplyr)
library(tidyverse)

d <- d %>% dplyr::select(-c("litter size", "refs"))

d # it has been dropped
```

### Step 3. log transform all of the other numeric variables.

```{r}
library(dplyr)
d <- d |> mutate(across(where(is.numeric), log))
d # checking work yes we did log transform all of the numeric variables
```

### Step 4. Regress the (now log transformed) age \[gestation(mo), weaning(mo), AFR(mo) (i.e., age at first reproduction), and max. life(mo) (i.e., maximum lifespan)\] and mass \[newborn(g) and wean mass(g)\] variables on (now log transformed) overall body mass(g)

#### Creating the new variiables \[relGest, relWean, relAFR, relLife, relNewbornMass, and relWeaningMass\] in this order below

```{r}

d <- d |> mutate(
  # Age-related variables
  relGest = resid(lm(`gestation(mo)` ~ `mass(g)`, data = d, na.action = na.exclude)),
  relWean = resid(lm(`weaning(mo)` ~ `mass(g)`, data = d, na.action = na.exclude)),
  relAFR = resid(lm(`AFR(mo)` ~ `mass(g)`, data = d, na.action = na.exclude)),
  relLife = resid(lm(`max. life(mo)` ~ `mass(g)`, data = d, na.action = na.exclude)),
  
  # Mass-related variables
  relNewbornMass = resid(lm(`newborn(g)` ~ `mass(g)`, data = d, na.action = na.exclude)),
  relWeaningMass = resid(lm(`wean mass(g)` ~ `mass(g)`, data = d, na.action = na.exclude))
)

#viewing new variables 
summary(d[, c("relGest", "relWean", "relAFR", "relLife", 
              "relNewbornMass", "relWeaningMass")])
```

### Step 5.

### 1. Plot residuals of max lifespan (relLife) in relation to Order. Which mammalian orders have the highest residual lifespan?

```{r}

Box1 <- ggplot(data = d, aes(x = order, y = relLife)) +
  geom_boxplot(na.rm = TRUE) +  
  geom_jitter(width = 0.2, alpha = 0.5, size = 1.5, na.rm = TRUE) +  
  labs(
    title = "Relative Maximum Lifespan by Order",
    x = "Order",
    y = "Relative Maximum Lifespan (Residuals)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# View Boxplot
Box1


```

#### Which mammalian orders have the highest residual lifespan? Primates

### 2.Plot residuals of newborn mass (relNewbornMass) in relation to Order.

```{r}

Box2 <- ggplot(data = d, aes(x = order, y = relNewbornMass)) +
  geom_boxplot(na.rm = TRUE) +  
  geom_jitter(width = 0.2, alpha = 0.5, size = 1.5, na.rm = TRUE) +  
  labs(
    title = "Relative Newborn Mass Across Orders",
    x = "Order",
    y = "Relative newborn mass (Residuals)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# View Boxplot
Box2

```

#### Which mammalian orders have the have highest residual newborn mass? Macroscelidae is in first place but is very close with Cetacea based off the boxplot

### 3. Plot residuals of weaning mass (relWeaningMass) in relation to Order

```{r}
Box3 <- ggplot(data = d, aes(x = order, y = relWeaningMass)) +
  geom_boxplot(na.rm = TRUE) +  
  geom_jitter(width = 0.2, alpha = 0.5, size = 1.5, na.rm = TRUE) +  
  labs(
    title = "Relative Weaning Mass Across Orders",
    x = "Order",
    y = "Relative weaning mass (Residuals)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# View Boxplot
Box3
```

##### Which mammalian orders have the have highest residual weaning mass? Perissodactyla noticeably highest residual weaning mass compared to the rest

# Step 6. 
Run models and a model selection process to evaluate what (now log transformed) variables best predict each of the two response variables, max. life(mo) and AFR(mo), from the set of the following predictors: gestation(mo), newborn(g), weaning(mo), wean mass(g), litters/year, and overall body mass(g).

```{r}
d1 <- d |> drop_na(c("max. life(mo)", "gestation(mo)", "newborn(g)", "weaning(mo)", "wean mass(g)", "litters/year", "mass(g)"))
ML_full <- lm(`max. life(mo)` ~ `gestation(mo)` + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `litters/year` + `mass(g)`, data = d1, na.action = na.fail)
ML_null <- lm(`max. life(mo)` ~ 1, data = d1, na.action = na.fail)
add1(ML_null, .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")

f2 <- update(ML_null, .~. + `gestation(mo)`)
add1(f2, .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")
```

### Maximum Lifespan

#### using forward step wise model selection

```{r}

library(tidyverse)
library(MASS)  

# dropping NAs in  maximum lifespan model
life_data <- d %>% 
  drop_na(`max. life(mo)`, `gestation(mo)`, `newborn(g)`, `weaning(mo)`, 
          `wean mass(g)`, `litters/year`, `mass(g)`)


# Forward selection for maximum lifespan model
# Start with null model
null_life <- lm(`max. life(mo)` ~ 1, data = life_data)

null_life

# Step 1: Test adding each predictor individually to the null model
add1(null_life, scope = .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
     `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")

```
Based on the results `gestation(mo)` has the highest F statistic (457.45) and lowest RSS (-273.94). Update our model and add this predictor

```{r}
m1_life <- update(null_life, formula = .~. + `gestation(mo)`)

add1(m1_life, scope = .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
     `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")

```
Based on the results `litters/year` has the highest new F stat (43.4095) and new lowest RSS (45.661); update our model and add this predictor 

```{r}
m2_life <- update(m1_life, formula = .~. + `litters/year`)

add1(m2_life, scope = .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
     `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")
```
According to the results the next highest F value (15.98) and lowest RSS (-325) is 'mass(g)'; update our model and add out predictor 

```{r}
m3_life <- update(m2_life, formula = .~. + `mass(g)`)

add1(m3_life, scope = .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
     `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")
```
According to the results the next highest F value (7.32) and lowest RSS (-330)is `weanning(mo)` update our model and add our predictor 

```{r}
m4_life <- update(m3_life, formula = .~. + `weaning(mo)`)

add1(m4_life, scope = .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
    `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")
```
Based off of these results there are no other variables to add that would improve the fit of the model significantly so the final best model is m4_life : `max. life(mo)` ~ `gestation(mo)` + `litters/year` + `mass(g)` +   `weaning(mo)`

```{r}
library(MuMIn)  


Life_full <- lm(`max. life(mo)` ~ `gestation(mo)` + `newborn(g)` + `weaning(mo)` + 
                `wean mass(g)` + `litters/year` + `mass(g)`, 
                data = d1, na.action = na.fail)

# generate all possible models 
all_possible_models <- dredge(Life_full)
all_possible_models

#show the coefficents of the top 10 models
top_10_models <- head(coef(all_possible_models), 10)

top_10_models 
#model averaging on models with delta AIC < 4
models_within_4_AIC <- subset(all_possible_models, delta < 4)
models_within_4_AIC


averaged_model <- model.avg(all_possible_models, subset = delta < 4)
averaged_model_summary <- summary(averaged_model)

(averaged_model_summary)

#plot
plot(averaged_model, full = TRUE, intercept = FALSE)

```

-   Based on the AICc the best model that adds explanatory power for maximum lifespan includes gestation(mo), litters/year, mass(g), weaning(mo), just like our forward selection

-   5 models have a delta AICc of 4 or less

-   gestation(mo) , litters/year , weaning(mo) , and mass(g) are included in all of this set of "top" models that have a delta AICCc less than 4


- Based on my graph : The variables that have confidence intervals not crossing zero are statistically significant predictors of maximum lifespan: **Gestation (mo)**, **Litters/year**, **Mass(g)**,**Weaning(mo)**: This matches what I got when I did my forward selection!!

### Age at First Reproduction

#### using forward step wise model selection

```{r}

AFR_data<- d |> drop_na(c("AFR(mo)", "gestation(mo)", "newborn(g)", "weaning(mo)", "wean mass(g)", "litters/year", "mass(g)"))

AFR_null <- lm(`AFR(mo)` ~ 1, data = AFR_data, na.action = na.fail)

add1(AFR_null, .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `litters/year` + `mass(g)`, test = "F")

```

The largest F value is (646.75) and the smallest RSS ( 112.92) belongs to `litters/year` we will update our model accordingly

```{r}
AFR_m1 <-  update(AFR_null,.~. + `litters/year`)

add1(AFR_m1, .~. + `gestation(mo)` + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `mass(g)`, test = "F")

```
`gestation(mo)` has the next highest  F value (139.303) and smallest RSS (73.622) so we will update accordingly

```{r}
AFR_m2 <-  update(AFR_m1,.~. + `gestation(mo)`)

add1(AFR_m2, .~. + `newborn(g)` + `weaning(mo)` + `wean mass(g)` + `mass(g)`, test = "F")


```

`Wean mass(g)` has the largest F value (5.49) and smallest RSS (72.09), so we will add and update our  model

```{r}
AFR_m3 <-  update(AFR_m2,.~. + `wean mass(g)`)

add1(AFR_m3, .~. + `newborn(g)` + `weaning(mo)` + `mass(g)`, test = "F")
```

we see that `weaning(mo)` is the next predictor that adds explanatory value with a f value of (6.6) and RSS of (70.3) update model!

```{r}
AFR_m4 <-  update(AFR_m3,.~. + `weaning(mo)`)

add1(AFR_m4, .~. + `newborn(g)` +  `mass(g)`, test = "F")

```

That is it no more to add.

according to F tests as criterion for model testing, forward selection tells us our best model is :

AFR(mo)`~`litters/year`+`gestation(mo)`+`wean mass(g)`+`weaning(mo)\`

### AIC
```{r}

# Step 1: Generate all possible models from the full AFR model
AFR_all_models <- dredge(AFR_full)

# Step 2: top 10 models based on AIC ranking

top_10_AFR_models <- head(coef(AFR_all_models), 10)
top_10_AFR_models

# Step 3: Perform model averaging on models withd elta AIC < 4
AFR_averaged_model <- model.avg(AFR_all_models, subset = delta < 4)
AFR_results <- summary(AFR_averaged_model)
AFR_results


# Step 5: plot 
plot(AFR_averaged_model, full = TRUE, intercept = FALSE,
     main = "Model-averaged effects on age at first reproduction")
```
-   According to AIC the best model is AFR(mo)`~`gestation(mo`+`litters/year`+` mass(g)`+`weaning(mo)

-   7 models have a delta AICc of less than 4

- According to the plot the top modesl only include 3 predictors whose 95% CI does not have 0 : gestation(mo), litters/year, weaning(mo) 
